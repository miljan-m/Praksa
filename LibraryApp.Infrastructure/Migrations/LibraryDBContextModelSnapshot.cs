// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using LibraryApp.Infrastructure.Persistance;

#nullable disable

namespace LibraryApp.Migrations
{
    [DbContext(typeof(LibraryDBContext))]
    partial class LibraryDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryApp.Models.Admin", b =>
                {
                    b.Property<string>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminId");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            AdminId = "1",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Admin1Name",
                            LastName = "Admin1LastName"
                        },
                        new
                        {
                            AdminId = "2",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Admin2Name",
                            LastName = "Admin2LastName"
                        },
                        new
                        {
                            AdminId = "3",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Admin3Name",
                            LastName = "Admin3LastName"
                        },
                        new
                        {
                            AdminId = "4",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Admin4Name",
                            LastName = "Admin4LastName"
                        },
                        new
                        {
                            AdminId = "5",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Admin5Name",
                            LastName = "Admin5LastName"
                        });
                });

            modelBuilder.Entity("LibraryApp.Models.Author", b =>
                {
                    b.Property<string>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = "1",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Author1LastName",
                            Name = "Author1Name"
                        },
                        new
                        {
                            AuthorId = "2",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Author2LastName",
                            Name = "Author2Name"
                        },
                        new
                        {
                            AuthorId = "3",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Author3LastName",
                            Name = "Author3Name"
                        },
                        new
                        {
                            AuthorId = "4",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Author4LastName",
                            Name = "Author4Name"
                        });
                });

            modelBuilder.Entity("LibraryApp.Models.Book", b =>
                {
                    b.Property<string>("Isbn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AuthorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Isbn");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasDiscriminator().HasValue("Book");

                    b.UseTphMappingStrategy();

                    b.HasData(
                        new
                        {
                            Isbn = "123456oaihsf",
                            Available = true,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genre = "Avantura",
                            Title = "Alisa u zemlji cuda"
                        },
                        new
                        {
                            Isbn = "asdffrghsf",
                            Available = true,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genre = "Avantura",
                            Title = "Lord of rings"
                        },
                        new
                        {
                            Isbn = "127889asdihsf",
                            Available = true,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genre = "Avantura",
                            Title = "Harry Potter"
                        },
                        new
                        {
                            Isbn = "deilgoihj2343",
                            Available = true,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genre = "Avantura",
                            Title = "Murder on Nil"
                        },
                        new
                        {
                            Isbn = "123456oadadadasf",
                            Available = true,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genre = "Avantura",
                            Title = "Le Petite Prince"
                        },
                        new
                        {
                            Isbn = "189er56oaihsf",
                            Available = true,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genre = "Avantura",
                            Title = "The jungle book"
                        });
                });

            modelBuilder.Entity("LibraryApp.Models.Customer", b =>
                {
                    b.Property<string>("JMBG")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JMBG");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            JMBG = "123456",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Customer1Name",
                            LastName = "Customer1LastName"
                        },
                        new
                        {
                            JMBG = "239184762",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Customer2Name",
                            LastName = "Customer2LastName"
                        },
                        new
                        {
                            JMBG = "329456",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Customer3Name",
                            LastName = "Customer3LastName"
                        },
                        new
                        {
                            JMBG = "324857",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Customer4Name",
                            LastName = "Customer4LastName"
                        },
                        new
                        {
                            JMBG = "238476",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Customer5Name",
                            LastName = "Customer5LastName"
                        });
                });

            modelBuilder.Entity("LibraryApp.Models.Rent", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.HasKey("id");

                    b.ToTable("Rents");
                });

            modelBuilder.Entity("LibraryApp.Models.SpecialEditionBook", b =>
                {
                    b.HasBaseType("LibraryApp.Models.Book");

                    b.Property<string>("Autograph")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InStorage")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Special");
                });

            modelBuilder.Entity("LibraryApp.Models.Book", b =>
                {
                    b.HasOne("LibraryApp.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("LibraryApp.Models.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
